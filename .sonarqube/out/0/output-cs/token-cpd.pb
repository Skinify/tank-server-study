¶
BO:\Repositorios\TankTankTeste\BaseDatabase\BaseMockedRepository.cs
	namespace 	
	SampleApp
 
. 
Data 
. 
Repositories %
{ 
public 

class  
BaseMockedRepository %
<% &
T& '
>' (
: 	
IBaseRepository
 
< 
T 
> 
where "
T# $
:% &
class' ,
{ 
private 
readonly 
IList 
< 
T  
>  !

_registers" ,
;, -
public

  
BaseMockedRepository

 #
(

# $
IList

$ )
<

) *
T

* +
>

+ ,
values

- 3
)

3 4
{ 	

_registers 
= 
values 
;  
} 	
public  
BaseMockedRepository #
(# $
)$ %
{ 	

_registers 
= 
new 
List !
<! "
T" #
># $
($ %
)% &
;& '
} 	
public 
async 
Task 
< 
T 
? 
> 
Find "
(" #
int# &
id' )
)) *
{ 	
return 
await 
Task 
. 
Run !
(! "
(" #
)# $
=>% '

_registers( 2
.2 3
FirstOrDefault3 A
(A B
)B C
)C D
;D E
} 	
public 
async 
Task 
Add 
( 
T 
item  $
)$ %
{ 	
await 
Task 
. 
Run 
( 
( 
) 
=>  

_registers! +
.+ ,
Add, /
(/ 0
item0 4
)4 5
)5 6
;6 7
return 
; 
} 	
public 
void 
Remove 
( 
T 
item !
)! "
{   	

_registers!! 
.!! 
Remove!! 
(!! 
item!! "
)!!" #
;!!# $
}"" 	
public$$ 
void$$ 
Edit$$ 
($$ 
T$$ 
item$$ 
)$$  
{%% 	
throw&& 
new&& #
NotImplementedException&& -
(&&- .
$str&&. 0
)&&0 1
;&&1 2
}'' 	
}(( 
})) í
<O:\Repositorios\TankTankTeste\BaseDatabase\BaseRepository.cs
	namespace 	
	SampleApp
 
. 
Data 
. 
Repositories %
{ 
public 

class 
BaseRepository 
<  
T  !
>! "
: 	
IBaseRepository
 
< 
T 
> 
where "
T# $
:% &
class' ,
{ 
private		 
readonly		 
	DbContext		 "
_context		# +
;		+ ,
public 
BaseRepository 
( 
	DbContext '

unitOfWork( 2
)2 3
{ 	
_context 
= 

unitOfWork !
;! "
} 	
public 
async 
Task 
< 
T 
? 
> 
Find "
(" #
int# &
id' )
)) *
{ 	
return 
await 
_context !
.! "
Set" %
<% &
T& '
>' (
(( )
)) *
.* +
	FindAsync+ 4
(4 5
id5 7
)7 8
;8 9
} 	
public 
async 
Task 
Add 
( 
T 
item  $
)$ %
{ 	
await 
_context 
. 
Set 
< 
T  
>  !
(! "
)" #
.# $
AddAsync$ ,
(, -
item- 1
)1 2
;2 3
return 
; 
} 	
public 
void 
Remove 
( 
T 
item !
)! "
{ 	
_context 
. 
Set 
< 
T 
> 
( 
) 
. 
Remove $
($ %
item% )
)) *
;* +
} 	
public   
void   
Edit   
(   
T   
item   
)    
{!! 	
_context"" 
."" 
Entry"" 
("" 
item"" 
)""  
.""  !
State""! &
=""' (
EntityState"") 4
.""4 5
Modified""5 =
;""= >
}## 	
}$$ 
}%% –
HO:\Repositorios\TankTankTeste\BaseDatabase\_Interface\IBaseRepository.cs
	namespace 	
BaseDatabase
 
. 

_Interface !
{ 
public 

	interface 
IBaseRepository $
<$ %
T% &
>& '
where( -
T. /
:0 1
class2 7
{ 
Task 
< 
T 
? 
> 
Find 
( 
int 
id 
) 
; 
Task 
Add 
( 
T 
item 
) 
; 
void 
Remove 
( 
T 
item 
) 
; 
void 
Edit 
( 
T 
item 
) 
; 
}		 
}

 