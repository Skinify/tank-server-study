// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tank;

#nullable disable

namespace Tank.Migrations
{
    [DbContext(typeof(TankContext))]
    [Migration("20230304182713_Teste")]
    partial class Teste
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tank.Models.Entities.Character.Cards", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cards", "Character");
                });

            modelBuilder.Entity("Tank.Models.Entities.Character.CharacterCards", b =>
                {
                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Place")
                        .HasColumnType("int");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("CharacterCards", "Character");
                });

            modelBuilder.Entity("Tank.Models.Entities.Character.CharacterRanks", b =>
                {
                    b.Property<DateTime>("AcquisitionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("RankId")
                        .HasColumnType("int");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.HasIndex("RankId")
                        .IsUnique();

                    b.ToTable("CharacterRanks", "Character");
                });

            modelBuilder.Entity("Tank.Models.Entities.Character.Characters", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Characters", "Character");
                });

            modelBuilder.Entity("Tank.Models.Entities.Character.CharactersFriends", b =>
                {
                    b.Property<DateTime>("AddDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CharacterId1")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CharacterId2")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("CharacterId1");

                    b.HasIndex("CharacterId2");

                    b.ToTable("CharactersFriends", "Character");
                });

            modelBuilder.Entity("Tank.Models.Entities.Character.Levels", b =>
                {
                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Blood")
                        .HasColumnType("int");

                    b.Property<long>("Xp")
                        .HasColumnType("bigint");

                    b.HasKey("Level");

                    b.ToTable("Levels", "Character");
                });

            modelBuilder.Entity("Tank.Models.Entities.Character.Ranks", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Agility")
                        .HasColumnType("int");

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<int>("Guard")
                        .HasColumnType("int");

                    b.Property<int>("Hp")
                        .HasColumnType("int");

                    b.Property<int>("Luck")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ranks", "Character");
                });

            modelBuilder.Entity("Tank.Models.Entities.Item.ItemBindTypes", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemBindTypes", "Item");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Name = "Bind 0"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Bind 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bind 2"
                        });
                });

            modelBuilder.Entity("Tank.Models.Entities.Item.ItemHoleTypes", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OpenCost")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ItemHoleTypes", "Item");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Description = "Hole for attacking purpose",
                            OpenCost = 0
                        },
                        new
                        {
                            Id = 1,
                            Description = "Hole for defending purpose",
                            OpenCost = 0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Hole for increase attributes purpose",
                            OpenCost = 0
                        });
                });

            modelBuilder.Entity("Tank.Models.Entities.Item.Items", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Agility")
                        .HasColumnType("int");

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<int>("Guard")
                        .HasColumnType("int");

                    b.Property<int?>("Hole1Id")
                        .HasColumnType("int");

                    b.Property<int?>("Hole2Id")
                        .HasColumnType("int");

                    b.Property<int?>("Hole3Id")
                        .HasColumnType("int");

                    b.Property<int?>("Hole4Id")
                        .HasColumnType("int");

                    b.Property<int?>("Hole5Id")
                        .HasColumnType("int");

                    b.Property<int?>("Hole6Id")
                        .HasColumnType("int");

                    b.Property<int>("Hp")
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsComposable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDroppable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEquipable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStrengthenable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsable")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemBindTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ItemsCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Luck")
                        .HasColumnType("int");

                    b.Property<int?>("MinLevel")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Item", "Item");
                });

            modelBuilder.Entity("Tank.Models.Entities.Item.ItemsCategories", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Place")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemsCategories", "Item");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Chapéu",
                            Place = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Óculos",
                            Place = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cabelo",
                            Place = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Face",
                            Place = 4
                        },
                        new
                        {
                            Id = 5,
                            Name = "Roupa",
                            Place = 5
                        },
                        new
                        {
                            Id = 6,
                            Name = "Olhos",
                            Place = 6
                        },
                        new
                        {
                            Id = 7,
                            Name = "Arma",
                            Place = 7
                        },
                        new
                        {
                            Id = 8,
                            Name = "Pulseiras",
                            Place = 8
                        },
                        new
                        {
                            Id = 9,
                            Name = "Anéis",
                            Place = 9
                        },
                        new
                        {
                            Id = 10,
                            Name = "Itens de combate"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Itens de auxílio"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Itens de Tarefa"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Terno",
                            Place = 11
                        },
                        new
                        {
                            Id = 14,
                            Name = "Colar",
                            Place = 12
                        },
                        new
                        {
                            Id = 15,
                            Name = "Decoração",
                            Place = 13
                        },
                        new
                        {
                            Id = 16,
                            Name = "Bolha",
                            Place = 14
                        },
                        new
                        {
                            Id = 17,
                            Name = "Itens auxiliares",
                            Place = 15
                        },
                        new
                        {
                            Id = 18,
                            Name = "Baú de Cartões"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Ajuda",
                            Place = 16
                        },
                        new
                        {
                            Id = 20,
                            Name = "Poção de Prática"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Inventário de Missões Práticas"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Baú de Cartões"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Armas especiais",
                            Place = 27
                        },
                        new
                        {
                            Id = 30,
                            Name = "Propriedade especial"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Mão Secundária Especial"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Sementes"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Fertilizante"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Alimento de mascote"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Ovo mascote"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Colheita"
                        },
                        new
                        {
                            Id = 50,
                            Name = "Arma mascote"
                        },
                        new
                        {
                            Id = 51,
                            Name = "Chapéu mascote"
                        });
                });

            modelBuilder.Entity("Tank.Models.Entities.Server.ServerConfigs", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ServerConfig", "Server");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Name = "PublicRSAKey",
                            Value = "-----BEGIN PUBLIC KEY-----\r\nMFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAL1ezivGNWo8deIaiWOtukZ5hsczjqza\r\nuNeF0ieYdWN8fE6/YZpB4ZOyZiGhp8EfRlFpUjzPtw1i5CcA7K+SWHUCAwEAAQ==\r\n-----END PUBLIC KEY-----"
                        },
                        new
                        {
                            Id = 1,
                            Name = "PrivateRSAKey",
                            Value = "-----BEGIN RSA PRIVATE KEY-----\r\nMIIBOgIBAAJBAL1ezivGNWo8deIaiWOtukZ5hsczjqzauNeF0ieYdWN8fE6/YZpB\r\n4ZOyZiGhp8EfRlFpUjzPtw1i5CcA7K+SWHUCAwEAAQJAMLJxiDY3RDN6CQPT8ssZ\r\nDMhxjUZH2VGBmQKzsTT2cvd94bH7V4ETGv011Tv5d31eeMudGLkiwUMIQUVBq/ba\r\nPQIhAOLCUPZxw4v/e3GnRi8Zm31wymdGk40AFuPApAGNFbDnAiEA1co6HkX4psjf\r\ny+XzxcSPlojhiyb98CQV2x5akJz1FEMCIQCLQHVjwl0pvgzasLSi/ADGudsyLN8z\r\nuZhU6NpOsYtehQIgMFrAEG7VEawnai/FljqiG3M0SEv2baVLyDayVzkY+Y8CIBji\r\ngNSm2/bwJM4fYfSsHD2BXOTneOWWP9ZtM6i30gWC\r\n-----END RSA PRIVATE KEY-----"
                        });
                });

            modelBuilder.Entity("Tank.Models.Entities.Server.ServerStates", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ServerStates", "Server");
                });

            modelBuilder.Entity("Tank.Models.Entities.Server.Servers", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("AllowedLevel")
                        .HasColumnType("int");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServerStateId")
                        .HasColumnType("int");

                    b.Property<int>("TotalCharacters")
                        .HasColumnType("int");

                    b.Property<int>("TotalRooms")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Servers", "Server");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Ip = "127.0.0.1",
                            Name = "Test server",
                            Port = 9202,
                            ServerStateId = 0,
                            TotalCharacters = 0,
                            TotalRooms = 0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
